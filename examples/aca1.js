const hmat = require('../dist/@youwol/hmatrix')

const A = [
    [
        0.00084871, 0.00140669, -0.00138025, -0.000205631, 0.000823172,
        -0.000564355, -5.21506e-5, 0.000613238, -0.000478461, 0.000309926,
        0.00151746, -0.00100365, -8.16097e-5, 0.00100922, -0.000829065,
        0.000418121, 0.00128497, -0.00155925, -0.000331003, 0.00175933,
    ],
    [
        4.72029e-5, -0.000385548, -0.000354195, -0.000120757, -2.72638e-5,
        -0.000185837, -6.20224e-5, -3.92509e-5, -0.000156531, -1.75058e-6,
        -0.000126379, -0.000468489, -9.95357e-5, -8.66036e-5, -0.000244545,
        -4.91212e-5, -0.000355057, -0.000243622, -0.000204684, -0.000152741,
    ],
    [
        -0.000928262, -0.000494123, -0.000144342, -6.04172e-5, -0.000499616,
        0.000291123, -0.000146082, -0.000323789, 0.000182681, -0.00066409,
        -0.000610757, -1.46255e-5, -0.000247343, -0.000532041, 0.000320478,
        -0.000737946, -0.000588696, 0.000349882, -0.000268588, -0.00104085,
    ],
    [
        0.000997464, 0.00114946, -0.00147839, -0.000203358, 0.000798207,
        -0.000738625, -2.65437e-5, 0.000578352, -0.000596641, 0.000459584,
        0.00142055, -0.0012326, -3.72132e-5, 0.000937948, -0.00101788,
        0.000533465, 0.00104153, -0.00168532, -0.000284499, 0.0016518,
    ],
    [
        -0.000159581, -0.000584616, -8.84246e-5, -9.11145e-5, -0.000176372,
        -4.22873e-5, -6.41936e-5, -0.000145388, -4.51464e-5, -0.00010629,
        -0.000389987, -0.000253477, -0.000104214, -0.000258265, -5.09991e-5,
        -0.000171523, -0.000528957, 7.96441e-5, -0.00017136, -0.000462098,
    ],
    [
        -0.000884015, -0.000266752, -0.000251108, -7.8725e-5, -0.000392122,
        0.000306769, -0.000159327, -0.000241187, 0.000179564, -0.000688771,
        -0.000422068, -3.79861e-5, -0.00026849, -0.00038983, 0.000308185,
        -0.000721964, -0.000356168, 0.000236891, -0.000312383, -0.00078904,
    ],
    [
        0.00108591, 0.001354, -0.00144403, -0.000181691, 0.000885831,
        -0.000737396, -4.06272e-6, 0.000643554, -0.000589127, 0.000513772,
        0.00156445, -0.00113945, -1.44702e-6, 0.00105314, -0.00101714,
        0.000614178, 0.00124909, -0.00175354, -0.000246313, 0.0018695,
    ],
    [
        0.000164385, -0.000289981, -0.000494664, -0.000157049, 5.60752e-5,
        -0.0002663, -7.09837e-5, 1.93215e-5, -0.000223193, 4.9617e-5,
        -8.06282e-6, -0.000609254, -0.000112953, 8.23097e-6, -0.000355092,
        9.27847e-6, -0.000249776, -0.000407741, -0.000258607, 1.29692e-5,
    ],
    [
        -0.000869901, -0.000222182, -0.000487984, -0.000109845, -0.000345709,
        0.000230472, -0.000179212, -0.000206308, 0.000111597, -0.000709341,
        -0.000327618, -0.000239779, -0.000300904, -0.000336959, 0.000196857,
        -0.000742838, -0.000328429, 5.62029e-5, -0.000372847, -0.000710091,
    ],
    [
        0.000922601, 0.00140014, -0.00137168, -0.000204087, 0.000867177,
        -0.000602853, -3.99679e-5, 0.000637579, -0.000502824, 0.000366228,
        0.0015395, -0.00101797, -6.13613e-5, 0.00104897, -0.000871189,
        0.000479154, 0.00130984, -0.00160614, -0.00031885, 0.00184771,
    ],
]
const m = new hmat.Matrix(10, 20)
const b = new hmat.Vector(20)
for (let i = 0; i < 10; ++i) {
    for (let j = 0; j < 20; ++j) {
        m[i][j] = A[i][j]
    }
}
for (let j = 0; j < 20; ++j) {
    b[j] = j
}

class MProvider {
    constructor(A) {
        this.A = A
    }
    value(i, j) {
        return this.A[i][j]
    }
}

function check(ca) {
    const x = new hmat.Vector(20)
    ca.mult(b, x)

    for (let i = 0; i < 10; ++i) {
        let val1 = 0
        let val2 = x[i]
        for (let j = 0; j < 20; ++j) {
            val1 += m[i][j] * b[j]
        }
        let diff = Math.abs((100 * (val1 - val2)) / val1)
        console.log(
            i,
            ' ',
            val1.toFixed(5),
            ' ',
            val2.toFixed(5),
            ' ',
            diff.toFixed(5),
            '%',
        )
    }
}

// ------------------------------------------------------

let eps = 0.2
const provider = new MProvider(A)
const ca = new hmat.ACA()
ca.build(10, 20, provider, eps)
check(ca)
